//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Project_QLNhaTroEntities : DbContext
    {
        public Project_QLNhaTroEntities()
            : base("name=Project_QLNhaTroEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CTDV> CTDVs { get; set; }
        public virtual DbSet<CTHD> CTHDs { get; set; }
        public virtual DbSet<DICHVU> DICHVUs { get; set; }
        public virtual DbSet<DIENNUOC> DIENNUOCs { get; set; }
        public virtual DbSet<HOPDONG> HOPDONGs { get; set; }
        public virtual DbSet<KHACHHANG> KHACHHANGs { get; set; }
        public virtual DbSet<NHATRO> NHATROes { get; set; }
        public virtual DbSet<PHIEUTHANHTOAN> PHIEUTHANHTOANs { get; set; }
        public virtual DbSet<PHONG> PHONGs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TAIKHOAN> TAIKHOANs { get; set; }
    
        public virtual int DichVu_Delete(string maDV)
        {
            var maDVParameter = maDV != null ?
                new ObjectParameter("maDV", maDV) :
                new ObjectParameter("maDV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DichVu_Delete", maDVParameter);
        }
    
        public virtual int DichVu_Insert(string maDV, string tenDV, Nullable<decimal> giaDV)
        {
            var maDVParameter = maDV != null ?
                new ObjectParameter("maDV", maDV) :
                new ObjectParameter("maDV", typeof(string));
    
            var tenDVParameter = tenDV != null ?
                new ObjectParameter("tenDV", tenDV) :
                new ObjectParameter("tenDV", typeof(string));
    
            var giaDVParameter = giaDV.HasValue ?
                new ObjectParameter("giaDV", giaDV) :
                new ObjectParameter("giaDV", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DichVu_Insert", maDVParameter, tenDVParameter, giaDVParameter);
        }
    
        public virtual ObjectResult<DichVu_Select_Result> DichVu_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DichVu_Select_Result>("DichVu_Select");
        }
    
        public virtual int DichVu_Update(string maDV, string tenDV, Nullable<decimal> giaDV)
        {
            var maDVParameter = maDV != null ?
                new ObjectParameter("maDV", maDV) :
                new ObjectParameter("maDV", typeof(string));
    
            var tenDVParameter = tenDV != null ?
                new ObjectParameter("tenDV", tenDV) :
                new ObjectParameter("tenDV", typeof(string));
    
            var giaDVParameter = giaDV.HasValue ?
                new ObjectParameter("giaDV", giaDV) :
                new ObjectParameter("giaDV", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DichVu_Update", maDVParameter, tenDVParameter, giaDVParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int TaiKhoan_Delete(string tenDangNhap)
        {
            var tenDangNhapParameter = tenDangNhap != null ?
                new ObjectParameter("tenDangNhap", tenDangNhap) :
                new ObjectParameter("tenDangNhap", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TaiKhoan_Delete", tenDangNhapParameter);
        }
    
        public virtual int TaiKhoan_Insert(string tenDangNhap, string matKhau, string hoTen, string sDT, string maQuyen)
        {
            var tenDangNhapParameter = tenDangNhap != null ?
                new ObjectParameter("tenDangNhap", tenDangNhap) :
                new ObjectParameter("tenDangNhap", typeof(string));
    
            var matKhauParameter = matKhau != null ?
                new ObjectParameter("matKhau", matKhau) :
                new ObjectParameter("matKhau", typeof(string));
    
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("hoTen", hoTen) :
                new ObjectParameter("hoTen", typeof(string));
    
            var sDTParameter = sDT != null ?
                new ObjectParameter("SDT", sDT) :
                new ObjectParameter("SDT", typeof(string));
    
            var maQuyenParameter = maQuyen != null ?
                new ObjectParameter("maQuyen", maQuyen) :
                new ObjectParameter("maQuyen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TaiKhoan_Insert", tenDangNhapParameter, matKhauParameter, hoTenParameter, sDTParameter, maQuyenParameter);
        }
    
        public virtual ObjectResult<TaiKhoan_SelectAll_Result> TaiKhoan_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TaiKhoan_SelectAll_Result>("TaiKhoan_SelectAll");
        }
    
        public virtual int TaiKhoan_Update(string tenDangNhap, string matKhau, string hoTen, string sDT, string maQuyen)
        {
            var tenDangNhapParameter = tenDangNhap != null ?
                new ObjectParameter("tenDangNhap", tenDangNhap) :
                new ObjectParameter("tenDangNhap", typeof(string));
    
            var matKhauParameter = matKhau != null ?
                new ObjectParameter("matKhau", matKhau) :
                new ObjectParameter("matKhau", typeof(string));
    
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("hoTen", hoTen) :
                new ObjectParameter("hoTen", typeof(string));
    
            var sDTParameter = sDT != null ?
                new ObjectParameter("SDT", sDT) :
                new ObjectParameter("SDT", typeof(string));
    
            var maQuyenParameter = maQuyen != null ?
                new ObjectParameter("maQuyen", maQuyen) :
                new ObjectParameter("maQuyen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TaiKhoan_Update", tenDangNhapParameter, matKhauParameter, hoTenParameter, sDTParameter, maQuyenParameter);
        }
    }
}
